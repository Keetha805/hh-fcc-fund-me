{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xea7e27e2e3cb59ce6260c81da79c76b6bd2b7c689dc8de7058635b3c88b7e2a0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1162815",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf9f8d0b0964405c94cf10a8022be38e976e503cc1cbed257dab89108e68e26e0",
    "transactionHash": "0xea7e27e2e3cb59ce6260c81da79c76b6bd2b7c689dc8de7058635b3c88b7e2a0",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1162815",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "40253d52b0f2f0da79c6625fabca527a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) public s_addressToAmount;\\n  address[] public s_funders;\\n  address private immutable i_owner;\\n  uint256 constant MINIMUM_USD = 50 * 1e18;\\n  AggregatorV3Interface public s_priceFeed;\\n\\n  event Funded(address indexed from, uint256 amount);\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == i_owner, \\\"Sender is not the owner!\\\");\\n    if (msg.sender != i_owner) {\\n      revert FundMe__NotOwner();\\n    }\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"Didnt send enough\\\"\\n    );\\n    s_funders.push(msg.sender);\\n    s_addressToAmount[msg.sender] += msg.value;\\n  }\\n\\n  //withdraw funds\\n\\n  //transfer\\n  //2300 gas error\\n  // payable(msg.sender).transfer(address(this).balance);\\n\\n  //send\\n  //2300 gas bool\\n  // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n  // require(sendSuccess, \\\"Send failed!\\\");\\n\\n  //call\\n  //no error, returns bool\\n  function withdraw() public onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmount[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed!\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    //mappings cant be in memory\\n    for (\\n      uint256 fundersIndex = 0;\\n      fundersIndex < funders.length;\\n      fundersIndex++\\n    ) {\\n      address funder = funders[fundersIndex];\\n      s_addressToAmount[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success, \\\"Call failed!\\\");\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunders() public view returns (address[] memory) {\\n    return s_funders;\\n  }\\n\\n  function getAddressToAmount(address funder) public view returns (uint256) {\\n    return s_addressToAmount[funder];\\n  }\\n}\\n\",\"keccak256\":\"0xf7d447af053080668ff21db31c43f4c06661ecf8dbc5338f165b327d12766e17\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) public view returns (uint256) {\\n    //->working with oracles needs tests in testnets\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    return uint256(price * 1e10);\\n  }\\n\\n  function getConversionRate(\\n    uint256 ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 price = getPrice(priceFeed);\\n    uint256 ethAmountUsd = (price * ethAmount) / 1e18;\\n\\n    return ethAmountUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xa1e5199a833c2f7e97c1766c4eb99827fa4aff5551ae45d81a8297b28e8d9729\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200153338038062001533833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6113ad620001866000396000818161039e0152818161061f01528181610687015261087d01526113ad6000f3fe6080604052600436106100955760003560e01c8063b60d428811610059578063b60d428814610183578063b7ef82c81461018d578063be2693f0146101ca578063c0f8cffc146101d4578063ea63a04414610211576100a4565b80630ec3b027146100ae5780633ccfd60b146100d957806354861af7146100f0578063893d20e81461012d5780639e87a5cd14610158576100a4565b366100a4576100a261023c565b005b6100ac61023c565b005b3480156100ba57600080fd5b506100c3610376565b6040516100d09190610c21565b60405180910390f35b3480156100e557600080fd5b506100ee61039c565b005b3480156100fc57600080fd5b5061011760048036038101906101129190610c77565b6105dc565b6040516101249190610cc5565b60405180910390f35b34801561013957600080fd5b5061014261061b565b60405161014f9190610cc5565b60405180910390f35b34801561016457600080fd5b5061016d610643565b60405161017a9190610c21565b60405180910390f35b61018b61023c565b005b34801561019957600080fd5b506101b460048036038101906101af9190610d0c565b61066d565b6040516101c19190610d48565b60405180910390f35b6101d2610685565b005b3480156101e057600080fd5b506101fb60048036038101906101f69190610d0c565b610949565b6040516102089190610d48565b60405180910390f35b34801561021d57600080fd5b50610226610991565b6040516102339190610e21565b60405180910390f35b6802b5e3af16b188000061027b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610a1f90919063ffffffff16565b10156102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390610ea0565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036d9190610eef565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610421576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104cc5760006001828154811061044757610446610f45565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c490610f74565b915050610424565b50600067ffffffffffffffff8111156104e8576104e7610fbd565b5b6040519080825280602002602001820160405280156105165781602001602082028036833780820191505090505b506001908051906020019061052c929190610afb565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105539061101d565b60006040518083038185875af1925050503d8060008114610590576040519150601f19603f3d011682016040523d82523d6000602084013e610595565b606091505b50509050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d09061107e565b60405180910390fd5b50565b600181815481106105ec57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561078e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610744575b5050505050905060005b81518110156108185760008282815181106107b6576107b5610f45565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081090610f74565b915050610798565b50600067ffffffffffffffff81111561083457610833610fbd565b5b6040519080825280602002602001820160405280156108625781602001602082028036833780820191505090505b5060019080519060200190610878929190610afb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108bf9061101d565b60006040518083038185875af1925050503d80600081146108fc576040519150601f19603f3d011682016040523d82523d6000602084013e610901565b606091505b5050905080610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c9061107e565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610a1557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109cb575b5050505050905090565b600080610a2b83610a5b565b90506000670de0b6b3a76400008583610a44919061109e565b610a4e9190611127565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610aa457600080fd5b505afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc91906111e5565b5050509150506402540be40081610af39190611260565b915050919050565b828054828255906000526020600020908101928215610b74579160200282015b82811115610b735782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b1b565b5b509050610b819190610b85565b5090565b5b80821115610b9e576000816000905550600101610b86565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610be7610be2610bdd84610ba2565b610bc2565b610ba2565b9050919050565b6000610bf982610bcc565b9050919050565b6000610c0b82610bee565b9050919050565b610c1b81610c00565b82525050565b6000602082019050610c366000830184610c12565b92915050565b600080fd5b6000819050919050565b610c5481610c41565b8114610c5f57600080fd5b50565b600081359050610c7181610c4b565b92915050565b600060208284031215610c8d57610c8c610c3c565b5b6000610c9b84828501610c62565b91505092915050565b6000610caf82610ba2565b9050919050565b610cbf81610ca4565b82525050565b6000602082019050610cda6000830184610cb6565b92915050565b610ce981610ca4565b8114610cf457600080fd5b50565b600081359050610d0681610ce0565b92915050565b600060208284031215610d2257610d21610c3c565b5b6000610d3084828501610cf7565b91505092915050565b610d4281610c41565b82525050565b6000602082019050610d5d6000830184610d39565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d9881610ca4565b82525050565b6000610daa8383610d8f565b60208301905092915050565b6000602082019050919050565b6000610dce82610d63565b610dd88185610d6e565b9350610de383610d7f565b8060005b83811015610e14578151610dfb8882610d9e565b9750610e0683610db6565b925050600181019050610de7565b5085935050505092915050565b60006020820190508181036000830152610e3b8184610dc3565b905092915050565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b6000610e8a601183610e43565b9150610e9582610e54565b602082019050919050565b60006020820190508181036000830152610eb981610e7d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610efa82610c41565b9150610f0583610c41565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f3a57610f39610ec0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f7f82610c41565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fb257610fb1610ec0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000611007600083610fec565b915061101282610ff7565b600082019050919050565b600061102882610ffa565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000611068600c83610e43565b915061107382611032565b602082019050919050565b600060208201905081810360008301526110978161105b565b9050919050565b60006110a982610c41565b91506110b483610c41565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110ed576110ec610ec0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061113282610c41565b915061113d83610c41565b92508261114d5761114c6110f8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61117781611158565b811461118257600080fd5b50565b6000815190506111948161116e565b92915050565b6000819050919050565b6111ad8161119a565b81146111b857600080fd5b50565b6000815190506111ca816111a4565b92915050565b6000815190506111df81610c4b565b92915050565b600080600080600060a0868803121561120157611200610c3c565b5b600061120f88828901611185565b9550506020611220888289016111bb565b9450506040611231888289016111d0565b9350506060611242888289016111d0565b925050608061125388828901611185565b9150509295509295909350565b600061126b8261119a565b91506112768361119a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156112b5576112b4610ec0565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156112f2576112f1610ec0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561132f5761132e610ec0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561136c5761136b610ec0565b5b82820290509291505056fea26469706673582212206bf3b9b1dbcfcf5a937ea2f215036df8fc4c14d70371e03de547e8675471c24264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063b60d428811610059578063b60d428814610183578063b7ef82c81461018d578063be2693f0146101ca578063c0f8cffc146101d4578063ea63a04414610211576100a4565b80630ec3b027146100ae5780633ccfd60b146100d957806354861af7146100f0578063893d20e81461012d5780639e87a5cd14610158576100a4565b366100a4576100a261023c565b005b6100ac61023c565b005b3480156100ba57600080fd5b506100c3610376565b6040516100d09190610c21565b60405180910390f35b3480156100e557600080fd5b506100ee61039c565b005b3480156100fc57600080fd5b5061011760048036038101906101129190610c77565b6105dc565b6040516101249190610cc5565b60405180910390f35b34801561013957600080fd5b5061014261061b565b60405161014f9190610cc5565b60405180910390f35b34801561016457600080fd5b5061016d610643565b60405161017a9190610c21565b60405180910390f35b61018b61023c565b005b34801561019957600080fd5b506101b460048036038101906101af9190610d0c565b61066d565b6040516101c19190610d48565b60405180910390f35b6101d2610685565b005b3480156101e057600080fd5b506101fb60048036038101906101f69190610d0c565b610949565b6040516102089190610d48565b60405180910390f35b34801561021d57600080fd5b50610226610991565b6040516102339190610e21565b60405180910390f35b6802b5e3af16b188000061027b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610a1f90919063ffffffff16565b10156102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390610ea0565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036d9190610eef565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610421576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104cc5760006001828154811061044757610446610f45565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c490610f74565b915050610424565b50600067ffffffffffffffff8111156104e8576104e7610fbd565b5b6040519080825280602002602001820160405280156105165781602001602082028036833780820191505090505b506001908051906020019061052c929190610afb565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105539061101d565b60006040518083038185875af1925050503d8060008114610590576040519150601f19603f3d011682016040523d82523d6000602084013e610595565b606091505b50509050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d09061107e565b60405180910390fd5b50565b600181815481106105ec57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561078e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610744575b5050505050905060005b81518110156108185760008282815181106107b6576107b5610f45565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081090610f74565b915050610798565b50600067ffffffffffffffff81111561083457610833610fbd565b5b6040519080825280602002602001820160405280156108625781602001602082028036833780820191505090505b5060019080519060200190610878929190610afb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108bf9061101d565b60006040518083038185875af1925050503d80600081146108fc576040519150601f19603f3d011682016040523d82523d6000602084013e610901565b606091505b5050905080610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c9061107e565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610a1557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109cb575b5050505050905090565b600080610a2b83610a5b565b90506000670de0b6b3a76400008583610a44919061109e565b610a4e9190611127565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610aa457600080fd5b505afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc91906111e5565b5050509150506402540be40081610af39190611260565b915050919050565b828054828255906000526020600020908101928215610b74579160200282015b82811115610b735782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b1b565b5b509050610b819190610b85565b5090565b5b80821115610b9e576000816000905550600101610b86565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610be7610be2610bdd84610ba2565b610bc2565b610ba2565b9050919050565b6000610bf982610bcc565b9050919050565b6000610c0b82610bee565b9050919050565b610c1b81610c00565b82525050565b6000602082019050610c366000830184610c12565b92915050565b600080fd5b6000819050919050565b610c5481610c41565b8114610c5f57600080fd5b50565b600081359050610c7181610c4b565b92915050565b600060208284031215610c8d57610c8c610c3c565b5b6000610c9b84828501610c62565b91505092915050565b6000610caf82610ba2565b9050919050565b610cbf81610ca4565b82525050565b6000602082019050610cda6000830184610cb6565b92915050565b610ce981610ca4565b8114610cf457600080fd5b50565b600081359050610d0681610ce0565b92915050565b600060208284031215610d2257610d21610c3c565b5b6000610d3084828501610cf7565b91505092915050565b610d4281610c41565b82525050565b6000602082019050610d5d6000830184610d39565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d9881610ca4565b82525050565b6000610daa8383610d8f565b60208301905092915050565b6000602082019050919050565b6000610dce82610d63565b610dd88185610d6e565b9350610de383610d7f565b8060005b83811015610e14578151610dfb8882610d9e565b9750610e0683610db6565b925050600181019050610de7565b5085935050505092915050565b60006020820190508181036000830152610e3b8184610dc3565b905092915050565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b6000610e8a601183610e43565b9150610e9582610e54565b602082019050919050565b60006020820190508181036000830152610eb981610e7d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610efa82610c41565b9150610f0583610c41565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f3a57610f39610ec0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f7f82610c41565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fb257610fb1610ec0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000611007600083610fec565b915061101282610ff7565b600082019050919050565b600061102882610ffa565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000611068600c83610e43565b915061107382611032565b602082019050919050565b600060208201905081810360008301526110978161105b565b9050919050565b60006110a982610c41565b91506110b483610c41565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110ed576110ec610ec0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061113282610c41565b915061113d83610c41565b92508261114d5761114c6110f8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61117781611158565b811461118257600080fd5b50565b6000815190506111948161116e565b92915050565b6000819050919050565b6111ad8161119a565b81146111b857600080fd5b50565b6000815190506111ca816111a4565b92915050565b6000815190506111df81610c4b565b92915050565b600080600080600060a0868803121561120157611200610c3c565b5b600061120f88828901611185565b9550506020611220888289016111bb565b9450506040611231888289016111d0565b9350506060611242888289016111d0565b925050608061125388828901611185565b9150509295509295909350565b600061126b8261119a565b91506112768361119a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156112b5576112b4610ec0565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156112f2576112f1610ec0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561132f5761132e610ec0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561136c5761136b610ec0565b5b82820290509291505056fea26469706673582212206bf3b9b1dbcfcf5a937ea2f215036df8fc4c14d70371e03de547e8675471c24264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}